<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abosen.mybatis.mapper.UserMapper">
    <!--开启二级缓存功能-->
    <cache/>
    <!-- 查询用户 -->
    <select id="findUserById" parameterType="int" resultType="user">
        SELECT *
        FROM user
        WHERE id = #{id}
    </select>

    <!-- 添加用户 -->
    <!--如果进行简单类型（String、Date、8种基本类型的包装类）的输入映射时，#{}中参数名称可以任意-->
    <insert id="insertUser" parameterType="user">
        insert into user (username, birthday, sex, address)
        values (#{username}, #{birthday}, #{sex}, #{address})
    </insert>

    <!-- 删除用户 -->
    <delete id="deleteUserById" parameterType="int">
        delete
        from user
        where id = #{id}
    </delete>

    <!--更新用户-->
    <update id="updateUser" parameterType="user">
        update user
        set username = #{username},
            birthday = #{birthday},
            sex      = #{sex},
            address  = #{address}
        where id = #{id}
    </update>

    <!--关联用户和订单-->
    <resultMap id="userWithOrders" type="userExtend">
        <!--user 关系映射-->
        <id property="id" column="id"/>
        <result property="address" column="address"/>
        <result property="username" column="username"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <!--一对多关系映射-->
        <collection property="orders" select="findOrdersByUserId" column="id"/>
    </resultMap>

    <resultMap id="orderWithItem" type="OrderExtend">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="number" column="number"/>
        <result property="createtime" column="createtime"/>
        <result property="note" column="note"/>
        <association property="item" javaType="Item" select="findItemByItemId" column="item_id"/>
    </resultMap>

    <select id="findItemByItemId" parameterType="int" resultType="Item">
        select *
        from item
        where id = #{id}
    </select>

    <select id="findOrdersByUserId" parameterType="int" resultMap="orderWithItem">
        select *, user_id as userId
        from orders
        where user_id = #{id}
    </select>

    <select id="selectUserWithOrders" parameterType="int" resultMap="userWithOrders">
        select *
        from user
        where id = #{id}
    </select>
</mapper>